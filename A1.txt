#include "mbed.h"
#include "PID.h"
#include "QEI.h"
#include "C12832.h"

#define RATE 0.1

DigitalOut Enable(PB_6);
Serial hm10(PA_11, PA_12);
C12832 lcd(D11, D13, D12, D7, D10);

DigitalOut sensor1(PB_4);
DigitalOut sensor2(PB_5);
DigitalOut sensor3(PB_3);
DigitalOut sensor4(PA_10);
DigitalOut sensor5(PB_8);
DigitalOut sensor6(PB_9);

AnalogIn out1(PC_0);
AnalogIn out2(PC_1);
AnalogIn out3(PB_0);
AnalogIn out4(PA_4);
AnalogIn out5(PC_3);
AnalogIn out6(PC_2);

PID controller(1.0, 0.0, 0.0, RATE);

class Bipolar {
private:
    DigitalOut Bi;
public:
    Bipolar(PinName pin): Bi(pin) {}
    void tru(void) {Bi = 1 ;}
};

class On {
private:
    DigitalOut pins;
public:
    On(PinName pin): pins(pin) {}
    void tru(void) {pins = 1 ;}
};

class motors {
private:
    PwmOut Motor1;
    PwmOut Motor2;
public:
    motors(PinName l, PinName r) : Motor1(l), Motor2(r) {}
    void setperiod(){
        Motor1.period(0.0002f);
        Motor2.period(0.0002f);
        }
    void constant (){
        Motor1.write(0.65f);
        Motor2.write(0.65f);
        }
    void left () {
        Motor2.write(0.8f);
        Motor1.write(0.6f);
        }
    void right () {
        Motor2.write(0.6f);
        Motor1.write(0.8f);
        }
    void stop () {
        Motor1.write(0.5f);
        Motor2.write(0.5f);
        }  
};

class control : public motors {
private:
    float values;
    float co ;
    float power1,power2; 
public:
    control (PinName l, PinName r) : motors(l,r) {}
    void calculation(){
        values = out1.read()+out2.read()+out3.read()+out4.read()+out5.read()+out6.read();
        controller.setProcessValue(values);
        co= controller.compute() * 5;  //test this
        }
    void powers (){
        power1=power1+co;
        power2=power2-co;
    }
    
    float showvalue (void) {
        values =5*out1.read()+2.5*out2.read()+1.2*out3.read()+(-1.45)*out4.read()+(-2.4)*out5.read()+(-3.7)*out6.read()+0.855+0.29;
        return values;   
        
    }
    
    
    
    void tomotors (){
        if (values<(-0.2)){
            left();
        }  
        //else if ((sensor0.read()+sensor1.read()+sensor2.read())<(sensor3.read()+sensor4.read()+sensor5.read())){
                    //Motor2.write(power1); //left motor
                    //Motor1.write(power2); }
        else {  constant();
        }
    }
        
};

/*class Bluetooth {
private:
    InterruptIn ok;
public:
    Bluetooth(PinName pin, PinName pin1) : ok(PA_11, PA_12) {}
    void turnaround (void) {
        Motor2.write(0.5f);
        Motor1.write(0.5f);
        wait(1);
        Motor2.write(0.8f);
        Motor2.write(0.4f);
    }
};*/


Bipolar B1(PA_7);
Bipolar B2(PA_8);
motors m(PB_10,PA_6);
control A(PB_10,PA_6);

int main(void) {
    
    Enable = 1;
    B1.tru();
    B2.tru();
    sensor1=1;
    sensor2=1;
    sensor3=1;
    sensor4=1;
    sensor5=1;
    sensor6=1;
    m.setperiod();
    controller.setInputLimits(0.0, 5.0);
    controller.setOutputLimits(0.0, 1.0); //test this
    controller.setBias(0.3);
    controller.setMode(1);
    controller.setSetPoint(1.7); //test this
    m.stop();
    wait(3);
    while(1){
        if (A.showvalue()<(-0.5)) {
            m.left();   
        }
        else if (A.showvalue()>0.5) {
            m.right();   
        }
        else { 
            m.constant();
        }
    }
    
}